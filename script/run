#!/usr/bin/env ruby

require 'logger'
require 'open3'
require 'json'
require 'pp'

class Executor
  def initialize(logger)
    @logger = logger
  end

  def run(cmd)
    output = nil
    Open3.popen3(cmd) do |stdin, stdout, stderr, wait_thr|
      # Process::Status object returned.
      status = wait_thr.value
      if status.exitstatus != 0
        @logger.warn "exitstatus: #{status.exitstatus}"
      end

      output = stdout.read
      @logger.warn output
      @logger.info stderr.read
    end

    output
  end
end

benchmark = ARGV[0]
if benchmark.nil?
  raise ArgumentError, "specify benchmark"
end

if ARGV[1]
  tags = [ARGV[1]]
else
  tags = ['v4.0.13', 'v4.1.9', 'v4.2.0']
end

logger = Logger.new("/dev/null")
executor = Executor.new(logger)

result = tags.map do |tag|
  STDERR.puts "Checking out #{tag}..."
  executor.run("cd repo && git checkout #{tag}")

  STDERR.puts "Bundling..."
  executor.run("cd benchmarks && bundle install --path vendor/bundle")

  STDERR.puts "Running benchmarks..."
  raw = executor.run("cd benchmarks && ruby #{benchmark}")
  STDERR.puts "Finished!\n"

  begin
    parsed = JSON.parse(raw)
  rescue JSON::ParserError
    STDERR.puts raw
    raise
  end
end

out = {
  ruby: RUBY_VERSION,
  benchmarks: result
}
puts JSON.pretty_generate(out)
